---
- name: Change server password policy (min password lenght to 12 symbols)
  shell: authconfig --passminlen=12 --update

- name: Add new user
  user:
    name: '{{ item.name }}'          
    shell: '{{ item.shell }}'
    append: yes
    groups: '{{ item.groups }}'
    generate_ssh_key: yes
    ssh_key_bits: 4096 
  loop: '{{ users }}'

- name: Reset password to default 12345
  shell: echo "{{ item.name }}:12345" | chpasswd
  loop: '{{ users }}'

- name: Force a user to change their password at next logon
  shell: chage -d 0 {{ item.name }}
  loop: '{{ users }}'

- name: Add sudo rights
  template:
    src: templates/sudoersd.j2
    dest: /etc/sudoers.d/{{ item.name }}
  loop: '{{ users }}'

- name: Creating directories in user's hoeme
  file:
    path: /home/{{ item.0.name }}/{{ item.1.name }}
    state: directory
    mode: 0600
    owner: '{{ item.0.name }}'
    group: '{{ item.0.name }}'
  with_nested:
    - '{{ users }}'
    - '{{ dirs }}'

- name: Set PATH
  lineinfile:
    path: /home/{{ item.name }}/.bashrc
    line: 'export PATH="$PATH:/opt/app/bin:/opt/app2/exec"'
  loop: '{{ users }}'

- name: Copy authorized key file
  shell: cat /home/{{ item.name }}/.ssh/id_rsa.pub > /home/{{ item.name }}/.ssh/authorized_keys
  loop: '{{ users }}'

- name: Change owner and permissions for authorized_keys
  file:
    path: /home/{{ item.name }}/.ssh/authorized_keys
    owner: '{{ item.name }}'
    group: '{{ item.name }}'
    mode: 0400  
  loop: '{{ users }}'

- name: Copy credentials file
  copy:
    src: files/app
    dest: /home/{{ item.name }}/.credentials/app
    owner: '{{ item.name }}'
    group: '{{ item.name }}'
    mode: 0400
  loop: '{{ users }}'

- name: Add or modify soft nofile limits for user
  pam_limits:
    domain: '{{ item.name }}'
    limit_type: soft
    limit_item: nofile
    value: '{{ item.nofile }}'
  loop: '{{ users }}'

- name: Add or modify hard nofile limits for user
  pam_limits:
    domain: '{{ item.name }}'
    limit_type: hard
    limit_item: nofile
    value: '{{ item.nofile }}'
  loop: '{{ users }}'

- name: Install pip
  yum:
   name: python-pip
   state: present

- name: Install venv
  pip:
    name: virtualenv 
  
- name: Create venv
  pip:
    name: '{{ item.pymodules }}'
    virtualenv: /home/{{ item.name }}/venv
  loop: '{{ users }}'

